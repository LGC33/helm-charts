apiVersion: {{ template "tena.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "tena.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ template "tena.name" . }}
    chart: {{ template "tena.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | trimSuffix "\n" | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | trimSuffix "\n" | indent 4 }}
{{- end }}
spec:
  strategy:
    type: {{ .Values.DeploymentUpdate.type }}
    {{- if eq .Values.DeploymentUpdate.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.DeploymentUpdate.maxSurge }}
      maxUnavailable: {{ .Values.DeploymentUpdate.maxUnavailable }}
    {{- end}}
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "tena.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "tena.fullname" . }}
      labels:
        app: {{ template "tena.name" . }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | trimSuffix "\n" | indent 8 }}
{{- end }}
    spec:
  {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
  {{- end }}
{{ if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /root/config/
              name: {{ template "tena.name" . }}-config
              readOnly: true
          ports:
            - name: listen-endpoint
              containerPort: {{ .Values.listenEndpoint.port }}
          env:
            # - name: LISTEN_ENDPOINTS
            #   value: "{{ .Values.listenEndpoint.host }}:{{ .Values.listenEndpoint.port }}"
            # - name: EM_ENDPOINTS
            #   value: "{{ .Values.executionManager.host }}:{{ .Values.executionManager.port }}"
            {{- range $key, $val := .Values.extraEnvironment }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- include "tena.imagePullSecrets" . | indent 6 }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
        - name: {{ template "tena.name" . }}-config
          configMap:
            name: {{ template "tena.name" . }}-config
            defaultMode: 0744
            items:
            - key: custom_config
              path: config
